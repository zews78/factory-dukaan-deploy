<%- include("../partials/start") %>
<link type="text/css" rel="stylesheet" href="/css/products.css" />
<%- include("../partials/headBody") %>
<%- include("../partials/header") %>
<div class="wrapper">
    <%- include("../partials/sidenav") %>
    <div class="main_content">
        <div class="header">
            <h2>My Products</h2>
        </div>
        <% if(products.length > 0) { %>
            <div class="add-product">
                <h4>Number Of Products: <%= products.length %></h4>
            </div>
            <% } else { %>
            <p></p>
            <% } %>

        <% if(products.length < user.productLimit || user.productLimit==="unlimited") { %>
            <div class="add-product">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalAddProduct">Add Product</button>
            </div>
            <div class="add-product">
                <button class='btn'style="background-color:#4DC247; "><a href="https://api.whatsapp.com/send?phone=+918619638640" style="color:white;">Whatsapp <i class='fab fa-whatsapp'></i></a></button>
            </div>
            <div class="add-product">
                <p>Having Trouble in adding product contact us on whatsapp </p>
            </div>
            
            <% } else { %>
                <div class="add-product">
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalAddProduct" disabled style="background-color: #70aff3; color:rgb(54, 54, 54)">Add Product</button>
                </div>
                <div class="add-product">
                    <pre style="color:red">Product Selling Limit Exceeded </pre>
                </div>
                
            <% } %>

        <% for (var i = 0; i < products.length; i++) { %>
            <div class="products-wrapper">
                <div class="card mb-3 w-75">
                    <div class="row no-gutters">
                        <div class="col-md-4">
                            <%if(products[i].images){%>
                                <img class="card-img-top" src="<%= products[i].images[0] %>" alt="Card image cap">
                            <%}
                            else{%>
                                <img class="card-img-top" src="/images/product1.jpg" alt="Card image cap">
                            <%}%>
                        </div>
                        <div class="col-md-6">
                            <div class="card-body">
                                <h5 class="card-title"><%= products[i].title %></h5>
                                <h6><b>Price:</b> â‚¹<%= products[i].price %></h6>
                                <p class="card-text"><%= products[i].desc %></p>
                                <p class="card-text"><small class="text-muted">Added on <%= new Date( products[i].createdOn._seconds*1000).toDateString() %></small></p>
                            </div>
                        </div>
                        <input type="hidden" name="product-id" value='<%= productsId[i] %>' id='<%= productsId[i] %> productId'/>
                        <input type="hidden" name="product-id" value='<%= products[i].title %>' id='<%= productsId[i] %> title'/>
                        <input type="hidden" name="product-id" value='<%= products[i].price %>' id='<%= productsId[i] %> price'/>
                        <input type="hidden" name="product-id" value='<%= products[i].desc %>' id='<%= productsId[i] %> desc'/>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary editButton" data-toggle="modal" data-target="#ModalEditForm1" id='<%= productsId[i] %>'>Edit</button>
                            <button type="button" class="btn btn-danger deleteButton" id='<%= productsId[i] %>' >Delete</button>
                            <a href="/product/<%= productsId[i] %>"><button type="button" class="btn btn-info">View Details</button></a>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
    </div>
</div>
<%- include("../partials/footer") %>            

<div id="ModalEditForm1" class="modal fade">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Product</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    
            </div>
            <p class="m-2" id="productID" style="color:gray"></p>
            <div class="modal-body">
                <form role="form" method="POST" action="">
                    <input type="hidden" name="_token" value="">
                    <div class="form-group">
                        <label class="control-label">Product Name</label>
                        <div>
                            <input type="text" class="form-control input-lg" name="user-name" value="" id="titleInput">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Price</label>
                        <div>
                            <input type="text" class="form-control input-lg" name="company-name" id="priceInput">
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="control-label">Product Description</label>
                        <div>
                            <textarea class="form-control"  rows="4" id="descInput"></textarea>
                        </div>
                    </div>
                    


                    <div class="form-group">
                        <div>
                            <button type="button" class="btn btn-success" onclick="editHandler()">Save</button>
                            <button type="submit" class="btn btn-secondary" data-dismiss="modal">Cancel</button>

                        </div>
                    </div>
                    <div class="form-group">
                        <div>

                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Delete Product</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button>
        </div>
        <div class="modal-body"> Are you sure you want to delete this product? This cannot be undone! </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <a href="" id="delete" class="btn btn-primary">Yes</a> </div>
      </div>
    </div>
</div>

<!-- Modal - Add Product -->
<div id="ModalAddProduct" class="modal fade">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Product</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form >
                    <input type="hidden" name="_token" value="">
                    <div class="form-group">
                        <label class="control-label" id="product-name">Product Name</label>
                        <div>
                            <input type="text" required class="form-control input-lg" name="user-name" value="" id="addTitleInput">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Price</label>
                        <div>
                            <input type="text" required class="form-control input-lg" name="company-name" id="addPriceInput">
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="control-label">Product Description</label>
                        <div>
                            <textarea class="form-control"  required rows="4" id="addDescInput"></textarea>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Keywords <small>(seperated by comma)</small> </label>
                        <div>
                            <input type="text" required class="form-control input-lg" name="company-name" id="addKeywordsInput">
                        </div>
                    </div>

                    <div class="form-group" id="specs-form">
                        <div class="input-group">
                            <div class="input-group-prepend">
                            <span class="input-group-text">Specifications</span>
                            </div>
                            <input type="text" aria-label="First name" class="form-control border border-primary" placeholder="Title" id="specsTitle0" required>
                            <input type="text" aria-label="Last name" class="form-control border border-primary" placeholder="Description" style="border-radius: 0;" id="specsDesc0" required>
                        </div>
                    </div>

                    <button type="button" class="btn btn-primary" onclick="specsHandler()">Add more specs</button>

                    <div class="form-group" id="custom_file" style="margin-bottom: 0;">
                        <label class="control-label">Product Images</label>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="addProductImages"
                                accept=".jpg,.png" multiple data-show-upload="true" data-show-caption="true">
                            <label class="custom-file-label" for="customFile"><i class="fas fa-upload"></i>Upload</label>
                            <div style="display: flex;"><progress style="display: none; margin: 3px;" value="0"
                                    max="100" id="uploader">0%</progress>
                                <p id="prog_shot"></p>
                            </div>
                            <!-- <input type="button" onclick="uploadImage()"> -->
                        </div>
                    </div>
                    <!-- <button type="button" class="btn btn-primary" onclick="imgHandler()">Add more</button> -->
                    <!-- <input type="text" id="img_url" style="display: none;" value="" name="img_url"> -->
                    <div id="img_name" style="border: 1px solid #04599F;border-radius: 4px;"></div><br>

                    <div class="form-group">
                        <div>
                            <button type="button" class="btn btn-success" onclick="addProductHandler()">Save</button>
                            <button type="submit" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                    
                </form>
            </div>
        </div>
    </div>
</div>          

<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.18.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.18.0/firebase-storage.js"></script>


<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.18.0/firebase-analytics.js"></script>

<script>
    // Your web app's Firebase configuration
    var firebaseConfig = {
        apiKey: "AIzaSyCQ2Zd5JZhjkQnpUrnq5FNWQnlN48awFdU",
        authDomain: "factory-dukaan.firebaseapp.com",
        databaseURL: "https://factory-dukaan.firebaseio.com",
        projectId: "factory-dukaan",
        storageBucket: "factory-dukaan.appspot.com",
        messagingSenderId: "901783648307",
        appId: "1:901783648307:web:41d71e94413adcbdb74b46",
        measurementId: "G-LH7XKNLQE5"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    firebase.analytics();
</script>

<script>

    //listen for file selection
    // JSON.stringify(document.getElementById('img_url').value);

    var img_arr = [];
    // var i = 0;
    var fileButton = document.getElementById('addProductImages');
    var uploader = document.getElementById('uploader');
    var getId = document.getElementById('prog_shot');


    fileButton.addEventListener("change", function(e) {
        // var i = 0;
        console.log("i was detected");
        // var getId = document.getElementById(`prog_shot${i}`);
        getId.innerText = 'Uploading...';
        getId.style.color = '#e76f51';
        uploader.style.display = 'block';
        //get file 
        var file = e.target.files[0];

        // create a storage ref
        var storageRef = firebase.storage().ref('images/' + file.name);

        //upload files
        var task = storageRef.put(file);

        // console.log(file);
        // console.log(task);
        //update progress bar
        task
            .then(snapshot => snapshot.ref.getDownloadURL())
            .then((url) => {
                console.log(url);
                img_arr.push(url);
                $('#img_name').append(`<div style="border:1px solid #C3E3FD;color:#011627;margin:4px;padding:1px;border-radius:2px">${file.name}</div>`);
                console.log(img_arr);
                // document.getElementById('img_url').value = JSON.stringify(img_arr);
                // console.log(document.getElementById('img_url').value);


                // document.querySelector('#someImageTagID').src = url;
            })
            .catch(console.error);
        task.on('state_changed',
            function progress(snapshot) {
                var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                uploader.value = percentage;
                if (percentage == 100) {
                    // var getId = document.getElementById(`prog_shot${i}`);
                    getId.innerText = "Done";
                    getId.style.color = 'green';
                }

            },
            function error(err) {
                console.log(err);
            },
            function complete() {
                console.log('completed successfully');
            })
            // i++;
    });



    document.querySelector('.custom-file-input').addEventListener('change',function(e) {
        var fileName = document.getElementById("customFile").files[0].name;
        var nextSibling = e.target.nextElementSibling
        nextSibling.innerText = fileName
    })
    
    var c=1;
    const specsHandler=()=>{
        
        $('#specs-form').append(`<div class="input-group ${c}"><div class="input-group-prepend"><span class="input-group-text">Specifications</span></div> <input type="text" aria-label="First name" class="form-control border border-primary" placeholder="Title" id="specsTitle${c}"><input type="text" aria-label="Last name" class="form-control border border-primary" placeholder="Description" id="specsDesc${c}" style="border-radius: 0;"></div>`)
        
        c=c+1;
    }
    const addProductHandler=async()=>{

        var specFields=document.getElementsByClassName("form-control border border-primary");
        var specs={};
        for(var i=0;i<specFields.length/2;i+=1){
            if(document.getElementById(`specsTitle${i}`).value===null || document.getElementById(`specsTitle${i}`).value==="" || document.getElementById(`specsDesc${i}`).value===null || document.getElementById(`specsDesc${i}`).value===""){
                continue;
            }else{specs[`${document.getElementById(`specsTitle${i}`).value}`]=`${document.getElementById(`specsDesc${i}`).value}`}
            
        }
        if(document.getElementById('addTitleInput').value===null || document.getElementById('addTitleInput').value===""){
            document.getElementById('addTitleInput').style.borderColor="red";
        }if(document.getElementById('addPriceInput').value===null || document.getElementById('addPriceInput').value===""){
            document.getElementById('addPriceInput').style.borderColor="red";
        }if(document.getElementById('addDescInput').value===null || document.getElementById('addDescInput').value===""){
            document.getElementById('addDescInput').style.borderColor="red";
        }if(document.getElementById('addKeywordsInput').value===null || document.getElementById('addKeywordsInput').value===""){
            document.getElementById('addKeywordsInput').style.borderColor="red";
        }if(document.getElementById(`specsTitle0`).value===null || document.getElementById(`specsTitle0`).value==="" || document.getElementById(`specsDesc0`).value===null || document.getElementById(`specsDesc0`).value===""){
            $('#specs-form').append('<p style="color:red">At Least One spec is required</p>')
        }else{
            const response=await axios({ 
            method:"POST",
            url:"/user/sellProduct",
            data:{
                images:img_arr,
                title:document.getElementById('addTitleInput').value,
                price:document.getElementById('addPriceInput').value,
                desc:document.getElementById('addDescInput').value,
                keywords:document.getElementById('addKeywordsInput').value.split(','),
                specs
            }
        });

        if(response.data.status==='success'){
            location.reload();
        }else{
            console.log('Sorry Pack Limit Reached');
        }}
        
       
    }


    // FUNCTIONS FOR EDITING A PRODUCT //////////////////////////////////////////////////
    var productId
    var editButtons=document.getElementsByClassName("btn btn-primary editButton");
    var editButtonsCount=editButtons.length;
    for(var i=0; i<editButtonsCount;i+=1){
        editButtons[i].onclick=async function(e){
            productId=this.id;
            document.getElementById('titleInput').value=document.getElementById(this.id+" title").value;
            document.getElementById('priceInput').value=document.getElementById(this.id+" price").value;
            document.getElementById('descInput').innerText=document.getElementById(this.id+" desc").value;
            document.getElementById('productID').innerText="Product ID: "+" " + this.id;
        }
    }

    const editHandler=async()=>{
      
       try{const response=await axios({
            method:"POST",
            url:"/user/updateProduct",
            data:{
                productId: productId,
                productUpdatedInfo:{
                    price:document.getElementById('priceInput').value,
                    title:document.getElementById('titleInput').value,
                    desc:document.getElementById('descInput').value,
                    images: img_arr
                }
                
            }
        })

        console.log('wait...')
        if(response.data.status==='success'){
            location.reload();
        }else{
            console.log('You Are Not authorised to perform this action')
        }}catch(error){
            console.log(error);
        }
        
    }

    // FUNCTIONS FOR DELETING A PRODUCT //////////////////////////////////////////

    var deleteButtons = document.getElementsByClassName("btn btn-danger deleteButton");
    var deleteButtonsCount = deleteButtons.length;
    for (var i = 0; i < deleteButtonsCount; i += 1) {
        deleteButtons[i].onclick = async function(e) {    

        var deleteConfirmation=prompt(`Are you sure you want to delete this product ?                                         Type ${this.id} this below to confirm `);
        console.log(deleteConfirmation)
        if(deleteConfirmation===this.id){
            try{
            const res=await axios({
                method:"POST",
                url:"/user/deleteProduct",
                data:{
                    productId:this.id
                }
            })
            if(res.data.status==='success'){
                console.log('working')
                location.reload();
            }
            if(res.data.status==='unauthorised'){
                console.log("You are not authorised to perform this action");
            }
        }catch(err){
            console.log(err)
         }
        }if(!deleteConfirmation || deleteConfirmation!=this.id){
            console.log("Deletion Cancelled");
        }
        
    };
}





</script>


<%- include("../partials/end") %>